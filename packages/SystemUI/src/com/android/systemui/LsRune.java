package com.android.systemui;

import android.os.Build;
import android.os.FactoryTest;
import android.os.SystemProperties;
import com.android.internal.telephony.TelephonyFeatures;
import com.android.systemui.util.DeviceType;
import com.android.systemui.util.SafeUIState;
import com.samsung.android.feature.SemCscFeature;
import com.samsung.android.feature.SemFloatingFeature;

/* compiled from: qb/89523975 427a50d40ec74a85ca352b86f77450b1c52ece5389e11158752b0d641a3a5098 */
/* loaded from: classes.dex */
public final class LsRune extends Rune {
    public static final boolean AOD_BRIGHTNESS_CONTROL;
    public static final boolean AOD_DISABLE_CLOCK_TRANSITION;
    public static final boolean AOD_DOZE_AP_SLEEP;
    public static final boolean AOD_FULLSCREEN;
    public static final boolean AOD_FULLSCREEN_APPEAR_ANIMATION;
    public static final boolean AOD_HYSTERESIS_BRIGHTNESS;
    public static final boolean AOD_LIGHT_REVEAL;
    public static final boolean AOD_SAFEMODE;
    public static final boolean AOD_SELF_POKE_DRAW_LOCK;
    public static final boolean AOD_SUB_DISPLAY_AOD_BY_FOLDER_EVENT;
    public static final boolean AOD_SUB_DISPLAY_COVER;
    public static final boolean AOD_SUB_DISPLAY_LOCK;
    public static final boolean AOD_SUB_FULLSCREEN;
    public static final boolean AOD_TSP_CONTROL;
    public static final boolean COVER_ADJUST_REFRESH_RATE;
    public static final boolean COVER_DEBUG_CAMERA_COVER_ON_SIDE_COVER;
    public static final boolean COVER_SAFEMODE;
    public static final boolean COVER_SUPPORTED;
    public static final boolean COVER_VIRTUAL_DISPLAY;
    public static final boolean KEYGUARD_ADJUST_REFRESH_RATE_USER_ACTIVITY;
    public static final boolean KEYGUARD_ALLOW_ROTATION;
    public static final boolean KEYGUARD_DELAY_NOTIFY_DRAWN_PREMIUM_WATCH;
    public static final boolean KEYGUARD_EM_TOKEN_CAPTURE_WINDOW;
    public static final boolean KEYGUARD_ENABLE_DEFAULT_ROTATION;
    public static final boolean KEYGUARD_EXTRA_USER_PRESENT;
    public static final boolean KEYGUARD_FBE;
    public static final boolean KEYGUARD_HOMEHUB;
    public static final boolean KEYGUARD_LOCK_SITUATION_VOLUME;
    public static final boolean KEYGUARD_PERFORMANCE_BIO_UNLOCK_BOOSTER;
    public static final boolean KEYGUARD_PERFORMANCE_SCREEN_ON;
    public static final boolean KEYGUARD_SCREEN_ON_FADE_OUT_ANIM;
    public static final boolean KEYGUARD_SUB_DISPLAY_COVER;
    public static final boolean KEYGUARD_SUB_DISPLAY_LARGE_FRONT;
    public static final boolean KEYGUARD_SUB_DISPLAY_LOCK;
    public static final boolean KEYGUARD_SUB_DISPLAY_ROTATIONAL;
    public static final boolean LOCKUI_AOD_PACKAGE_AVAILABLE;
    public static final boolean LOCKUI_BLUR;
    public static final boolean LOCKUI_CAPTURED_BLUR;
    public static final boolean LOCKUI_ECO_BATTERY;
    public static final boolean LOCKUI_MULTI_USER;
    public static final boolean LOCKUI_NOW_BAR_SUPPORT_GUIDING_EFFECT;
    public static final boolean LOCKUI_SHORTCUT_BLUR_BG;
    public static final boolean LOCKUI_SUB_DISPLAY_COVER;
    public static final boolean LOCKUI_SUB_DISPLAY_LOCK;
    public static final boolean PLUGIN_LOCK_LSM;
    public static final boolean PLUGIN_LOCK_MULTIPLE_ACTIVATION;
    public static final boolean PLUGIN_LOCK_STAR_SAFEMODE;
    public static final boolean SECURITY_ARROW_VIEW;
    public static final boolean SECURITY_BACKGROUND_AUTHENTICATION;
    public static final boolean SECURITY_BIOMETRICS_TABLET;
    public static final boolean SECURITY_BLOCK_CARRIER_TEXT_WHEN_SIM_NOT_READY;
    public static final boolean SECURITY_BLUR;
    public static final boolean SECURITY_BOUNCER_WINDOW;
    public static final boolean SECURITY_CAPTURED_BLUR;
    public static final boolean SECURITY_COLOR_CURVE_BLUR;
    public static final boolean SECURITY_DEAD_ZONE;
    public static final boolean SECURITY_DEFAULT_LANDSCAPE;
    public static final boolean SECURITY_ESIM;
    public static final boolean SECURITY_FINGERPRINT_GUIDE_POPUP;
    public static final boolean SECURITY_FINGERPRINT_IN_DISPLAY;
    public static final boolean SECURITY_HAPTIC_FEEDBACK_ON_DC_MOTOR;
    public static final boolean SECURITY_NAVBAR_ENABLED;
    public static final boolean SECURITY_OPEN_THEME;
    public static final boolean SECURITY_PUNCH_HOLE_FACE_VI;
    public static final boolean SECURITY_SIM_PERSO_LOCK;
    public static final boolean SECURITY_SUB_DISPLAY_COVER;
    public static final boolean SECURITY_SUB_DISPLAY_LOCK;
    public static final boolean SECURITY_SWIPE_BOUNCER;
    public static final boolean SECURITY_UNPACK;
    public static final boolean SUBSCREEN_DEBUG_ACTIVITY_ON_MAIN;
    public static final boolean SUBSCREEN_LARGE_FRONT_SUB_DISPLAY;
    public static final boolean SUBSCREEN_UI;
    public static final boolean SUBSCREEN_WATCHFACE;
    public static final String VALUE_SUB_DISPLAY_POLICY = null;
    public static final boolean WALLPAPER_BLUR;
    public static final boolean WALLPAPER_DESKTOP_STANDALONE_MODE_WALLPAPER;
    public static final boolean WALLPAPER_FESTIVAL_WALLPAPER;
    public static final boolean WALLPAPER_PLAY_GIF;
    public static final boolean WALLPAPER_ROTATABLE_WALLPAPER;
    public static final boolean WALLPAPER_SUB_DISPLAY_MODE;
    public static final boolean WALLPAPER_SUB_WATCHFACE;
    public static final boolean WALLPAPER_SUPPORT_SUIT_CASE;
    public static final boolean WALLPAPER_VIDEO_WALLPAPER;
    public static final boolean WALLPAPER_VIRTUAL_DISPLAY;

    static {
        String string = ("user".equals(Build.TYPE) || (SystemProperties.getInt("persist.debug.subdisplay_test_mode", 0) & 1) == 0) ? SemFloatingFeature.getInstance().getString("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_SUBDISPLAY_POLICY") : "";
        String string2 = SemFloatingFeature.getInstance().getString("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_POLICY_LIST");
        boolean contains = string.contains("LOCKSCREEN");
        KEYGUARD_SUB_DISPLAY_LOCK = contains;
        KEYGUARD_SUB_DISPLAY_COVER = string.contains("COVER");
        KEYGUARD_SUB_DISPLAY_ROTATIONAL = string.contains("ROTATIONAL");
        KEYGUARD_FBE = DeviceType.isFbeSupported();
        KEYGUARD_LOCK_SITUATION_VOLUME = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_AUDIO_SUPPORT_SITUATION_EXTENSION", "TRUE");
        KEYGUARD_EXTRA_USER_PRESENT = SystemProperties.get("ro.csc.sales_code").equals("VZW") || SystemProperties.get("ro.csc.sales_code").equals("VPP");
        KEYGUARD_DELAY_NOTIFY_DRAWN_PREMIUM_WATCH = contains && SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_CLOCK_SUPPORT_PREMIUM_WATCH");
        KEYGUARD_ADJUST_REFRESH_RATE_USER_ACTIVITY = Integer.parseInt("3") > 1;
        KEYGUARD_HOMEHUB = DeviceType.isHomeHubDevice();
        KEYGUARD_ALLOW_ROTATION = !string2.contains("DISALLOW_DEFAULT_ROTATION") && DeviceType.isTablet();
        KEYGUARD_ENABLE_DEFAULT_ROTATION = !string2.contains("DISALLOW_DEFAULT_ROTATION") && (DeviceType.isTablet() || string2.contains("ENABLE_DEFAULT_ROTATION"));
        boolean z = Build.IS_DEBUGGABLE;
        KEYGUARD_EM_TOKEN_CAPTURE_WINDOW = !z;
        KEYGUARD_PERFORMANCE_BIO_UNLOCK_BOOSTER = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_POLICY_LIST", "bio_unlock_booster") || SystemProperties.getBoolean("persist.keyguard.enable_bio_unlock_booster", false);
        boolean contains2 = string.contains("LARGESCREEN");
        KEYGUARD_SUB_DISPLAY_LARGE_FRONT = contains2;
        KEYGUARD_PERFORMANCE_SCREEN_ON = (DeviceType.isTablet() || contains || contains2 || BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM", "aodversion")) ? false : true;
        KEYGUARD_SCREEN_ON_FADE_OUT_ANIM = SemFloatingFeature.getInstance().getString("SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM", "").contains("clocktransition");
        SECURITY_OPEN_THEME = true;
        boolean z2 = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG");
        SECURITY_BLUR = z2;
        boolean z3 = !z2 && SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_CAPTURED_BLUR");
        SECURITY_CAPTURED_BLUR = z3;
        boolean z4 = !z3;
        SECURITY_BOUNCER_WINDOW = z4;
        SECURITY_COLOR_CURVE_BLUR = z4;
        SECURITY_SWIPE_BOUNCER = "US".equals(SystemProperties.get("ro.csc.countryiso_code", ""));
        boolean contains3 = string.contains("LOCKSCREEN");
        SECURITY_SUB_DISPLAY_LOCK = contains3;
        SECURITY_SUB_DISPLAY_COVER = string.contains("COVER");
        SECURITY_ARROW_VIEW = contains3 || DeviceType.isTablet();
        SECURITY_DEAD_ZONE = (!DeviceType.isDeadzoneSupported() || DeviceType.isTablet() || contains3) ? false : true;
        SECURITY_DEFAULT_LANDSCAPE = SemFloatingFeature.getInstance().getInt("SEC_FLOATING_FEATURE_COMMON_CONFIG_PREFERRED_USER_ROTATION", 0) == 1;
        SECURITY_NAVBAR_ENABLED = BasicRune.NAVBAR_ENABLED;
        SECURITY_HAPTIC_FEEDBACK_ON_DC_MOTOR = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DC_MOTOR_HAPTIC_FEEDBACK");
        SECURITY_UNPACK = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_COMMON_SUPPORT_UNPACK");
        SECURITY_FINGERPRINT_IN_DISPLAY = true;
        SECURITY_BACKGROUND_AUTHENTICATION = false;
        SECURITY_PUNCH_HOLE_FACE_VI = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_PUNCHHOLE_VI", "face");
        boolean isTablet = DeviceType.isTablet();
        SECURITY_BIOMETRICS_TABLET = isTablet;
        SECURITY_SIM_PERSO_LOCK = TelephonyFeatures.isCountrySpecific(0, new String[]{"KOR"});
        SECURITY_ESIM = DeviceType.isSupportESim();
        SECURITY_BLOCK_CARRIER_TEXT_WHEN_SIM_NOT_READY = string2.contains("BlockCarrierTextWhenSimNotReady") || DeviceType.isWiFiOnlyDevice();
        SECURITY_FINGERPRINT_GUIDE_POPUP = isTablet;
        COVER_SUPPORTED = DeviceType.isCoverSupported();
        COVER_SAFEMODE = SafeUIState.isSysUiSafeModeEnabled();
        boolean contains4 = string.contains("VIRTUAL_DISPLAY");
        COVER_VIRTUAL_DISPLAY = contains4;
        COVER_ADJUST_REFRESH_RATE = contains4 && Integer.parseInt("3") > 0;
        COVER_DEBUG_CAMERA_COVER_ON_SIDE_COVER = z && SystemProperties.getBoolean("debug.camera_cover_on_side_cover", false);
        boolean contains5 = string.contains("COVER");
        SUBSCREEN_UI = contains5;
        boolean z5 = contains5 && string.contains("WATCHFACE");
        SUBSCREEN_WATCHFACE = z5;
        SUBSCREEN_LARGE_FRONT_SUB_DISPLAY = contains5 && string.contains("LARGESCREEN");
        SUBSCREEN_DEBUG_ACTIVITY_ON_MAIN = z5 && z && SystemProperties.getBoolean("debug.subscreen_activity_on_main", false);
        LOCKUI_SHORTCUT_BLUR_BG = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG");
        LOCKUI_SUB_DISPLAY_LOCK = string.contains("LOCKSCREEN");
        LOCKUI_SUB_DISPLAY_COVER = string.contains("COVER");
        LOCKUI_AOD_PACKAGE_AVAILABLE = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM", "aodversion");
        LOCKUI_BLUR = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG");
        LOCKUI_CAPTURED_BLUR = !SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG") && SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_CAPTURED_BLUR");
        LOCKUI_MULTI_USER = DeviceType.isTablet() && Rune.SYSUI_MULTI_USER && !FactoryTest.isFactoryBinary();
        LOCKUI_NOW_BAR_SUPPORT_GUIDING_EFFECT = SystemProperties.getBoolean("debug.nowbar.effect", false);
        LOCKUI_ECO_BATTERY = !SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_BATTERY_DISABLE_ECO_BATTERY");
        AOD_DOZE_AP_SLEEP = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_LCD_SUPPORT_DOZE_AP_SLEEP");
        AOD_BRIGHTNESS_CONTROL = DeviceType.isSupportBrightnessControl();
        AOD_SUB_DISPLAY_AOD_BY_FOLDER_EVENT = string.contains("AOD") && (string.contains("LOCKSCREEN") || string.contains("WATCHFACE"));
        AOD_SUB_DISPLAY_COVER = string.contains("COVER");
        AOD_SUB_DISPLAY_LOCK = string.contains("LOCKSCREEN");
        boolean z6 = (BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM", "activeclock") || SemFloatingFeature.getInstance().getString("SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM", "").contains("clocktransition")) ? false : true;
        AOD_DISABLE_CLOCK_TRANSITION = z6;
        AOD_SAFEMODE = SafeUIState.isSysUiSafeModeEnabled();
        AOD_LIGHT_REVEAL = !z6 && DeviceType.isSupportLightReveal();
        boolean z7 = SemFloatingFeature.getInstance().getInt("SEC_FLOATING_FEATURE_LCD_CONFIG_AOD_FULLSCREEN", -1) >= 1;
        AOD_FULLSCREEN = z7;
        AOD_FULLSCREEN_APPEAR_ANIMATION = z7;
        AOD_SUB_FULLSCREEN = SemFloatingFeature.getInstance().getInt("SEC_FLOATING_FEATURE_LCD_CONFIG_AOD_FULLSCREEN", -1) == 3;
        AOD_HYSTERESIS_BRIGHTNESS = z7;
        AOD_TSP_CONTROL = Build.VERSION.SEM_FIRST_SDK_INT >= 33;
        AOD_SELF_POKE_DRAW_LOCK = SystemProperties.getBoolean("persist.enable.self.poke.draw_lock", true);
        WALLPAPER_VIDEO_WALLPAPER = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_WALLPAPER_STYLE", "VIDEO");
        SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_LOCKSCREEN_SUPPORT_VIDEO_PLAY_RANDOM_POSITION");
        boolean z8 = SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_3D_SURFACE_TRANSITION_FLAG");
        WALLPAPER_BLUR = z8;
        if (!z8) {
            SemFloatingFeature.getInstance().getBoolean("SEC_FLOATING_FEATURE_GRAPHICS_SUPPORT_CAPTURED_BLUR");
        }
        WALLPAPER_ROTATABLE_WALLPAPER = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_WALLPAPER_STYLE", "ROTATABLE") || DeviceType.isTablet();
        WALLPAPER_SUB_DISPLAY_MODE = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_WALLPAPER_STYLE", "LID");
        WALLPAPER_FESTIVAL_WALLPAPER = BasicRune$$ExternalSyntheticOutline0.m("SEC_FLOATING_FEATURE_LOCKSCREEN_CONFIG_WALLPAPER_STYLE", "FESTIVAL");
        boolean contains6 = string.contains("WATCHFACE");
        WALLPAPER_SUB_WATCHFACE = contains6;
        boolean contains7 = string.contains("VIRTUAL_DISPLAY");
        WALLPAPER_VIRTUAL_DISPLAY = contains7;
        boolean contains8 = string.contains("LARGESCREEN");
        WALLPAPER_PLAY_GIF = contains6 || contains7;
        WALLPAPER_DESKTOP_STANDALONE_MODE_WALLPAPER = SystemProperties.getInt("ro.build.version.oneui", 0) < 50100;
        WALLPAPER_SUPPORT_SUIT_CASE = contains8 || z7;
        SemCscFeature.getInstance().getString("CscFeature_Common_ConfigSpecialEdition").contains("MaisonMargiela");
        PLUGIN_LOCK_MULTIPLE_ACTIVATION = contains6 || contains7;
        PLUGIN_LOCK_LSM = SemCscFeature.getInstance().getString("CscFeature_Common_ConfigDynamicLockScreenPolicy").contains("MagazineLockScreen");
        PLUGIN_LOCK_STAR_SAFEMODE = SafeUIState.isSysUiSafeModeEnabled();
    }
}
