package com.android.systemui.media.mediaoutput.icons.badge;

import androidx.compose.material.icons.filled.CloseKt$$ExternalSyntheticOutline0;
import androidx.compose.ui.graphics.ColorKt;
import androidx.compose.ui.graphics.PathFillType;
import androidx.compose.ui.graphics.SolidColor;
import androidx.compose.ui.graphics.StrokeCap;
import androidx.compose.ui.graphics.StrokeJoin;
import androidx.compose.ui.graphics.vector.ImageVector;
import androidx.compose.ui.graphics.vector.PathBuilder;
import androidx.compose.ui.unit.Dp;
import com.samsung.android.knox.custom.IKnoxCustomManager;
import kotlin.Lazy;
import kotlin.LazyKt__LazyJVMKt;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.internal.DefaultConstructorMarker;

public abstract class ChromecastKt {
    public static final Lazy Chromecast$delegate = LazyKt__LazyJVMKt.lazy(new Function0() { // from class: com.android.systemui.media.mediaoutput.icons.badge.ChromecastKt$Chromecast$2
        @Override // kotlin.jvm.functions.Function0
        public final Object invoke() {
            float f = (float) 18.0d;
            Dp.Companion companion = Dp.Companion;
            ImageVector.Builder builder = new ImageVector.Builder("IcBadgeChromecast", f, f, 18.0f, 18.0f, 0L, 0, false, IKnoxCustomManager.Stub.TRANSACTION_setUsbConnectionType, null);
            DefaultConstructorMarker defaultConstructorMarker = null;
            SolidColor solidColor = new SolidColor(ColorKt.Color(4281348144L), defaultConstructorMarker);
            SolidColor solidColor2 = new SolidColor(ColorKt.Color(4294967295L), defaultConstructorMarker);
            StrokeCap.Companion.getClass();
            int i = StrokeCap.Round;
            StrokeJoin.Companion.getClass();
            int i2 = StrokeJoin.Round;
            PathFillType.Companion.getClass();
            int i3 = PathFillType.EvenOdd;
            PathBuilder pathBuilder = new PathBuilder();
            pathBuilder.moveTo(9.0f, 9.0f);
            pathBuilder.moveToRelative(-8.0f, 0.0f);
            pathBuilder.arcToRelative(8.0f, 8.0f, 16.0f, true);
            pathBuilder.arcToRelative(8.0f, 8.0f, -16.0f, true);
            ImageVector.Builder.m491addPathoIyEayM$default(builder, pathBuilder._nodes, i3, solidColor, solidColor2, 2.0f, i, i2, 4.0f);
            SolidColor solidColor3 = new SolidColor(ColorKt.Color(4294967295L), defaultConstructorMarker);
            SolidColor solidColor4 = new SolidColor(ColorKt.Color(0), defaultConstructorMarker);
            PathBuilder m = CloseKt$$ExternalSyntheticOutline0.m(13.7137f, 7.6852f, 12.8007f, 7.6849f);
            m.lineTo(12.8015f, 6.3466f);
            m.lineTo(5.3489f, 6.3466f);
            m.lineTo(5.3489f, 11.4662f);
            m.lineTo(9.0747f, 11.4659f);
            m.lineTo(9.0752f, 12.4369f);
            m.lineTo(5.0113f, 12.4369f);
            m.curveTo(4.6939f, 12.4369f, 4.4367f, 12.1796f, 4.4367f, 11.8622f);
            m.lineTo(4.4367f, 5.9505f);
            m.curveTo(4.4367f, 5.6332f, 4.6939f, 5.3759f, 5.0113f, 5.3759f);
            m.lineTo(13.1391f, 5.3759f);
            m.curveTo(13.4564f, 5.3759f, 13.7137f, 5.6332f, 13.7137f, 5.9505f);
            m.lineTo(13.7137f, 7.6852f);
            m.close();
            ImageVector.Builder.m491addPathoIyEayM$default(builder, m._nodes, i3, solidColor3, solidColor4, 1.0f, 0, 0, 4.0f);
            SolidColor solidColor5 = new SolidColor(ColorKt.Color(4294967295L), defaultConstructorMarker);
            SolidColor solidColor6 = new SolidColor(ColorKt.Color(0), defaultConstructorMarker);
            PathBuilder pathBuilder2 = new PathBuilder();
            pathBuilder2.moveTo(13.654f, 8.4942f);
            pathBuilder2.curveTo(12.5548f, 8.489f, 11.5588f, 8.8966f, 10.8433f, 9.628f);
            pathBuilder2.curveTo(10.1367f, 10.351f, 9.7609f, 11.3394f, 9.7857f, 12.4125f);
            pathBuilder2.lineTo(10.5704f, 12.3947f);
            pathBuilder2.curveTo(10.5507f, 11.5348f, 10.8471f, 10.7473f, 11.4046f, 10.1776f);
            pathBuilder2.curveTo(11.971f, 9.5981f, 12.7688f, 9.2793f, 13.6516f, 9.2793f);
            pathBuilder2.lineTo(13.654f, 8.4942f);
            pathBuilder2.close();
            ImageVector.Builder.m491addPathoIyEayM$default(builder, pathBuilder2._nodes, i3, solidColor5, solidColor6, 1.0f, 0, 0, 4.0f);
            SolidColor solidColor7 = new SolidColor(ColorKt.Color(4294967295L), defaultConstructorMarker);
            SolidColor solidColor8 = new SolidColor(ColorKt.Color(0), defaultConstructorMarker);
            PathBuilder pathBuilder3 = new PathBuilder();
            pathBuilder3.moveTo(13.6388f, 10.0318f);
            pathBuilder3.curveTo(12.9906f, 10.0318f, 12.4251f, 10.2561f, 12.0012f, 10.6795f);
            pathBuilder3.curveTo(11.5642f, 11.1165f, 11.3235f, 11.7283f, 11.324f, 12.4041f);
            pathBuilder3.lineTo(12.1091f, 12.4036f);
            pathBuilder3.curveTo(12.1091f, 11.9381f, 12.2676f, 11.5231f, 12.5564f, 11.2347f);
            pathBuilder3.curveTo(12.8298f, 10.9618f, 13.2032f, 10.8169f, 13.6369f, 10.8169f);
            pathBuilder3.lineTo(13.6388f, 10.0318f);
            pathBuilder3.close();
            ImageVector.Builder.m491addPathoIyEayM$default(builder, pathBuilder3._nodes, i3, solidColor7, solidColor8, 1.0f, 0, 0, 4.0f);
            SolidColor solidColor9 = new SolidColor(ColorKt.Color(4294967295L), defaultConstructorMarker);
            SolidColor solidColor10 = new SolidColor(ColorKt.Color(0), defaultConstructorMarker);
            PathBuilder pathBuilder4 = new PathBuilder();
            pathBuilder4.moveTo(12.9966f, 11.7046f);
            pathBuilder4.curveTo(12.8331f, 11.8687f, 12.8335f, 12.1341f, 12.9966f, 12.2982f);
            pathBuilder4.curveTo(13.1602f, 12.4603f, 13.4252f, 12.4608f, 13.5892f, 12.2982f);
            pathBuilder4.curveTo(13.7528f, 12.1336f, 13.7528f, 11.8687f, 13.5892f, 11.7046f);
            pathBuilder4.curveTo(13.4257f, 11.541f, 13.1602f, 11.541f, 12.9966f, 11.7046f);
            pathBuilder4.close();
            ImageVector.Builder.m491addPathoIyEayM$default(builder, pathBuilder4._nodes, i3, solidColor9, solidColor10, 1.0f, 0, 0, 4.0f);
            return builder.build();
        }
    });
}
